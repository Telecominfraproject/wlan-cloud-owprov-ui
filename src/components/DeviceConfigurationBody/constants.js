export const BASE_FORM = {
  name: {
    type: 'string',
    value: '',
    error: false,
    required: true,
  },
  weight: {
    type: 'int',
    value: 0,
    error: false,
    required: true,
    minimum: 0,
    maximum: 65535,
  },
  description: {
    type: 'string',
    value: '',
    error: false,
    required: false,
  },
};

export const GLOBALS_FORM = {
  'ipv4-network': {
    type: 'string',
    value: '',
    error: false,
    required: true,
  },
  'ipv6-network': {
    type: 'string',
    value: '',
    error: false,
    required: true,
  },
};

export const UNIT_FORM = {
  name: {
    type: 'string',
    value: '',
    error: false,
    required: true,
  },
  location: {
    type: 'string',
    value: '',
    error: false,
    required: true,
  },
  timezone: {
    type: 'select',
    value: '',
    error: false,
    required: true,
    options: [
      'Midway Islands Time (UTC-11:00)',
      'Hawaii Standard Time (UTC-10:00)',
      'Pacific Standard Time (UTC-8:00)',
      'Mountain Standard Time (UTC-7:00)',
      'Central Standard Time (UTC-6:00)',
      'Eastern Standard Time (UTC-5:00)',
      'Puerto Rico and US Virgin Islands Time (UTC-4:00)',
      'Canada Newfoundland Time (UTC-3:30)',
      'Brazil Eastern Time (UTC-3:00)',
      'Central African Time (UTC-1:00)',
      'Universal Coordinated Time (UTC)',
      'European Central Time (UTC+1:00)',
      'Eastern European Time (UTC+2:00)',
      '(Arabic) Egypt Standard Time (UTC+2:00)',
      'Eastern African Time (UTC+3:00)',
      'Middle East Time (UTC+3:30)',
      'Near East Time (UTC+4:00)',
      'Pakistan Lahore Time (UTC+5:00)',
      'India Standard Time (UTC+5:30)',
      'Bangladesh Standard Time (UTC+6:00)',
      'Vietnam Standard Time (UTC+7:00)',
      'China Taiwan Time (UTC+8:00)',
      'Japan Standard Time (UTC+9:00)',
      'Australia Central Time (UTC+9:30)',
      'Australia Eastern Time (UTC+10:00)',
      'Solomon Standard Time (UTC+11:00)',
      'New Zealand Standard Time (UTC+12:00)',
    ],
  },
  'leds-active': {
    type: 'bool',
    value: true,
    error: false,
  },
  'random-password': {
    type: 'bool',
    value: false,
    error: false,
  },
};

export const METRICS_FORM = {
  statistics: {
    enabled: false,
    interval: {
      type: 'int',
      value: 60,
      error: false,
      required: true,
      minimum: 60,
      maximum: 1000,
      unit: 'seconds',
    },
    types: {
      value: [],
      type: 'multi',
      error: false,
      required: true,
      options: ['ssids', 'lldp', 'clients'],
    },
  },
  health: {
    enabled: false,
    interval: {
      type: 'int',
      value: 60,
      error: false,
      required: true,
      minimum: 60,
      maximum: 1000,
      unit: 'seconds',
    },
  },
  'wifi-frames': {
    enabled: false,
    filters: {
      value: [],
      type: 'multi',
      error: false,
      required: true,
      options: [
        'probe',
        'auth',
        'assoc',
        'disassoc',
        'deauth',
        'local-deauth',
        'inactive-deauth',
        'key-mismatch',
        'beacon-report',
        'radar-detected',
      ],
    },
  },
  'dhcp-snooping': {
    enabled: false,
    filters: {
      value: [],
      type: 'multi',
      error: false,
      required: true,
      options: ['ack', 'discover', 'offer', 'request', 'solicit', 'reply', 'renew'],
    },
  },
};

export const SERVICES_FORM = {
  lldp: {
    enabled: false,
    describe: {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    location: {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
  },
  ssh: {
    enabled: false,
    port: {
      value: 22,
      type: 'int',
      error: false,
      required: true,
      maximum: 65535,
    },
    'authorized-keys': {
      value: [],
      type: 'multi-input',
      error: false,
      required: true,
    },
    'password-authentication': {
      type: 'bool',
      value: false,
      error: false,
    },
  },
  ntp: {
    enabled: false,
    servers: {
      value: [],
      type: 'multi-input',
      format: 'uc-host',
      formatExplanation: 'Enter IP or Host Name',
      error: false,
      required: true,
    },
    'local-server': {
      type: 'bool',
      value: false,
      error: false,
    },
  },
  mdns: {
    enabled: false,
    enable: {
      type: 'bool',
      value: false,
      error: false,
    },
  },
  rtty: {
    enabled: false,
    host: {
      type: 'string',
      value: '',
      error: false,
      required: true,
      format: 'uc-host',
    },
    port: {
      value: 5912,
      type: 'int',
      error: false,
      required: true,
      maximum: 65535,
    },
    token: {
      type: 'string',
      value: '',
      error: false,
      required: true,
      maxLength: '32',
      minLength: '32',
    },
  },
  log: {
    enabled: false,
    host: {
      type: 'string',
      value: '',
      error: false,
      required: true,
      format: 'uc-host',
    },
    port: {
      value: 5912,
      type: 'int',
      error: false,
      required: true,
      maximum: 65535,
    },
    proto: {
      value: ['udp'],
      type: 'multi',
      error: false,
      required: true,
      options: ['udp', 'tcp'],
    },
    size: {
      value: 1000,
      type: 'int',
      error: false,
      required: true,
      minimum: 32,
    },
  },
  http: {
    enabled: false,
    'http-port': {
      value: 80,
      type: 'int',
      error: false,
      required: true,
      maximum: 65535,
      minimum: 1,
    },
  },
  igmp: {
    enabled: false,
    enable: {
      type: 'bool',
      value: false,
      error: false,
    },
  },
  ieee8021x: {
    enabled: false,
    'ca-certificate': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    'ca-certificate-filename': {
      type: 'string',
      value: '',
      error: false,
      required: false,
    },
    'use-local-certificate': {
      type: 'bool',
      value: false,
      error: false,
    },
    'server-certificate': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    'private-key': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    'private-key-filename': {
      type: 'string',
      value: '',
      error: false,
      required: false,
    },
    users: {
      value: [],
      type: 'multi-custom',
      error: false,
      required: true,
    },
  },
  'radius-proxy': {
    enabled: false,
    realms: {
      value: [],
      type: 'multi-custom',
      error: false,
      required: true,
    },
  },
  'online-check': {
    enabled: false,
    'ping-hosts': {
      value: [],
      type: 'multi-input',
      format: 'uc-host',
      formatExplanation: 'Enter IP or Host Name',
      error: false,
      required: true,
    },
    'download-hosts': {
      value: [],
      type: 'multi-input',
      error: false,
      required: true,
    },
    'check-interval': {
      value: 60,
      type: 'int',
      error: false,
      required: true,
      minimum: 0,
      unit: 'seconds',
    },
    'check-threshold': {
      value: 1,
      type: 'int',
      error: false,
      required: true,
      minimum: 0,
    },
    action: {
      value: [],
      type: 'multi',
      error: false,
      required: true,
      options: ['wifi', 'leds'],
    },
  },
  'open-flow': {
    enabled: false,
    controller: {
      type: 'string',
      value: '',
      error: false,
      required: true,
      format: 'cidr',
    },
    mode: {
      value: [],
      type: 'multi',
      error: false,
      required: true,
      options: ['pssl', 'ptcp', 'ssl', 'tcp'],
    },
    'ca-certificate-filename': {
      type: 'string',
      value: '',
      error: false,
      required: false,
    },
    'ca-certificate': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    'ssl-certificate': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    'private-key': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    'private-key-filename': {
      type: 'string',
      value: '',
      error: false,
      required: false,
    },
  },
  'data-plane': {
    enabled: false,
    'ingress-filters': {
      value: [],
      type: 'multi-custom',
      error: false,
      required: true,
      structure: {
        name: {
          label: 'name',
          type: 'string',
        },
        program: {
          label: 'program',
          type: 'string',
          format: 'uc-base64',
        },
      },
    },
  },
  'wifi-steering': {
    enabled: false,
    mode: {
      value: [],
      type: 'multi',
      error: false,
      required: true,
      options: ['local', 'cloud'],
    },
    'assoc-steering': {
      type: 'bool',
      value: false,
      error: false,
    },
    'required-snr': {
      value: 0,
      type: 'int',
      error: false,
      required: true,
      unit: 'db',
    },
    'required-probe-snr': {
      value: 0,
      type: 'int',
      error: false,
      required: true,
      unit: 'db',
    },
    'required-roam-snr': {
      value: 0,
      type: 'int',
      error: false,
      required: true,
      unit: 'db',
    },
    'load-kick-threshold': {
      value: 0,
      type: 'int',
      error: false,
      required: true,
    },
    'auto-channel': {
      type: 'bool',
      value: false,
      error: false,
    },
  },
  'quality-of-service': {
    enabled: false,
    'upload-rate': {
      value: 0,
      type: 'int',
      error: false,
      required: true,
      minimum: 0,
    },
    'download-rate': {
      value: 0,
      type: 'int',
      error: false,
      required: true,
      minimum: 0,
    },
  },
  'facebook-wifi': {
    enabled: false,
    'vendor-id': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    'gateway-id': {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
    secret: {
      type: 'string',
      value: '',
      error: false,
      required: true,
    },
  },
  'airtime-policies': {
    enabled: false,
    'dns-match': {
      value: [],
      type: 'multi-input',
      error: false,
      required: true,
    },
    'dns-weight': {
      value: 256,
      type: 'int',
      error: false,
      required: true,
      minimum: 0,
    },
  },
};

export const LOCAL_USER_FORM = {
  mac: {
    type: 'string',
    value: '',
    error: false,
    required: true,
    format: 'uc-mac',
  },
  'user-name': {
    type: 'string',
    value: '',
    error: false,
    required: true,
    minLength: 1,
  },
  password: {
    type: 'string',
    value: '',
    error: false,
    required: true,
    minLength: 8,
    maxLength: 63,
  },
  'vlan-id': {
    type: 'int',
    value: '',
    error: false,
    required: true,
    minimum: 0,
    maximum: 4096,
  },
};

export const REALMS_FORM = {
  realm: {
    type: 'string',
    value: '*',
    error: false,
    required: true,
  },
  'auto-discover': {
    type: 'bool',
    value: false,
    error: false,
  },
  host: {
    type: 'string',
    value: '',
    error: false,
    format: 'uc-host',
  },
  port: {
    type: 'int',
    value: 2083,
    error: false,
    required: true,
    minimum: 0,
    maximum: 65535,
  },
  secret: {
    type: 'string',
    value: '',
    error: false,
  },
  'use-local-certificates': {
    type: 'bool',
    value: false,
    error: false,
  },
  'ca-certificate': {
    type: 'string',
    value: '',
    error: false,
  },
  'ca-certificate-filename': {
    type: 'string',
    value: '',
    error: false,
  },
  certificate: {
    type: 'string',
    value: '',
    error: false,
  },
  'private-key': {
    type: 'string',
    value: '',
    error: false,
  },
  'private-key-filename': {
    type: 'string',
    value: '',
    error: false,
  },
  'private-key-password': {
    type: 'string',
    value: '',
    error: false,
  },
};

export const RADIOS_FORM = {
  band: {
    type: 'select',
    value: '2G',
    error: false,
    required: true,
    options: ['2G', '5G', '5G-lower', '5G-upper', '6G'],
  },
  bandwidth: {
    type: 'select',
    value: '5',
    error: false,
    required: true,
    options: ['5', '10', '20'],
  },
  channel: {
    type: 'string',
    value: 'auto',
    error: false,
    oneOf: true,
    options: [],
  },
  country: {
    type: 'string',
    value: '',
    error: false,
    minLength: 2,
    maxLength: 2,
  },
  'channel-mode': {
    type: 'select',
    value: 'HT',
    error: false,
    required: true,
    options: [
      { value: 'HT', label: 'HT (A,B,G,N)' },
      { value: 'VHT', label: 'VHT (A,B,G,N,AC)' },
      { value: 'HE', label: 'HE (WiFi 6,A,B,G,N,AC,AX)' },
    ],
  },
  'channel-width': {
    type: 'select',
    value: '80',
    error: false,
    required: true,
    options: [
      { value: '20', label: '20 MHz' },
      { value: '40', label: '40 MHz' },
      { value: '80', label: '80 MHz' },
      { value: '160', label: '160 MHz' },
      { value: '8080', label: '8080 MHz' },
    ],
  },
  'require-mode': {
    type: 'select',
    value: '',
    error: false,
    required: false,
    options: [
      { value: '', label: 'None' },
      { value: 'HT', label: 'HT (A,B,G,N)' },
      { value: 'VHT', label: 'VHT (A,B,G,N,AC)' },
      { value: 'HE', label: 'HE (WiFi 6,A,B,G,N,AC,AX)' },
    ],
  },
  mimo: {
    type: 'select',
    value: '',
    error: false,
    required: false,
    options: [
      { value: '', label: 'None' },
      { value: 'auto', label: 'Auto' },
      { value: '1x1', label: '1x1' },
      { value: '2x2', label: '2x2' },
      { value: '3x3', label: '3x3' },
      { value: '4x4', label: '4x4' },
      { value: '5x5', label: '5x5' },
      { value: '6x6', label: '6x6' },
      { value: '7x7', label: '7x7' },
      { value: '8x8', label: '8x8' },
    ],
  },
  'tx-power': {
    type: 'int',
    value: 0,
    error: false,
    required: true,
    minimum: 0,
    maximum: 30,
    unit: 'db',
  },
  'legacy-rates': {
    type: 'bool',
    value: false,
    error: false,
  },
  'beacon-interval': {
    type: 'int',
    value: 100,
    error: false,
    required: true,
    minimum: 15,
    maximum: 65535,
  },
  'dtim-period': {
    type: 'int',
    value: 2,
    error: false,
    required: true,
    minimum: 1,
    maximum: 255,
  },
  'maximum-clients': {
    type: 'int',
    value: '4',
    error: false,
    required: false,
    minimum: 0,
  },
  'hostapd-iface-raw': {
    type: 'string',
    value: '',
    error: false,
    format: 'url-param',
  },
  rates: {
    enabled: true,
    beacon: {
      type: 'select',
      value: '6000',
      error: false,
      required: false,
      options: [
        { value: '1000', label: '1000 ms' },
        { value: '2000', label: '2000 ms' },
        { value: '5500', label: '5500 ms' },
        { value: '6000', label: '6000 ms' },
        { value: '9000', label: '9000 ms' },
        { value: '11000', label: '11000 ms' },
        { value: '12000', label: '12000 ms' },
        { value: '18000', label: '18000 ms' },
        { value: '24000', label: '24000 ms' },
        { value: '36000', label: '36000 ms' },
        { value: '48000', label: '48000 ms' },
        { value: '54000', label: '54000 ms' },
      ],
    },
    multicast: {
      type: 'select',
      value: '24000',
      error: false,
      required: false,
      options: [
        { value: '1000', label: '1000 ms' },
        { value: '2000', label: '2000 ms' },
        { value: '5500', label: '5500 ms' },
        { value: '6000', label: '6000 ms' },
        { value: '9000', label: '9000 ms' },
        { value: '11000', label: '11000 ms' },
        { value: '12000', label: '12000 ms' },
        { value: '18000', label: '18000 ms' },
        { value: '24000', label: '24000 ms' },
        { value: '36000', label: '36000 ms' },
        { value: '48000', label: '48000 ms' },
        { value: '54000', label: '54000 ms' },
      ],
    },
  },
  he: {
    enabled: false,
    'multiple-bssid': {
      type: 'bool',
      value: false,
      error: false,
    },
    ema: {
      type: 'bool',
      value: false,
      error: false,
    },
    'bss-color': {
      type: 'int',
      value: '64',
      error: false,
      required: false,
      minimum: 0,
    },
  },
};
